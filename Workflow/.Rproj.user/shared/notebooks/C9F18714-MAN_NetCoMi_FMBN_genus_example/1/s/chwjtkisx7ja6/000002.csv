"0","if(keep_time) tic(""Node analysis"")"
"0",""
"0","mymethods <- c(""spieceasi"",""sparcc"")"
"0","n_to_label <- 20 # max number of nodes to label in the node plots"
"0","node_analysis_list <- vector(""list"", length = length(mymethods))"
"0","for(i in seq_along(mymethods)){"
"0","  # create the dfs, one for spiec-easi and one for sparCC and only select FMBN"
"0","  # only select nodes with degree>0"
"0","  FMBN_node_df <- node_stats_df %>%"
"0","    dplyr::filter(method == mymethods[i]) %>%"
"0","    dplyr::filter(degree>0) %>%"
"0","    mutate(Study = as.factor(Study),"
"0","           rel_pos_degree = pos_degree / sum(pos_degree)) %>%"
"0","    dplyr::rename(tlabel = label)"
"0","  "
"0","  "
"0","  # use a loop to do the node degree graphs, print them and put them in a list"
"0","  node_degree_plot_list <- vector(""list"", length=nlevels(FMBN_node_df$study))"
"0","  "
"0","  for(j in seq_along(levels(FMBN_node_df$Study))){"
"0","    gtitle = paste(levels(FMBN_node_df$Study)[j], mymethods[i], sep = "", "")"
"0","    temp_df <- FMBN_node_df %>% "
"0","      dplyr::filter(Study ==levels(FMBN_node_df$Study)[j]) %>%"
"0","      mutate(dgr = pos_degree + neg_degree) %>%"
"0","      arrange(-dgr) %>%"
"0","      rowid_to_column() %>% "
"0","      mutate(to_label = if_else((rowid<=20 | is_hub), tlabel, NA_character_))"
"0","    "
"0","    ave_degree = mean(temp_df$dgr, na.rm = T)"
"0","    ave_pos_degree = mean(temp_df$pos_degree, na.rm = T)"
"0","    # creating the plot, only the names of the top 20 nodes (in terms of degree)"
"0","    # are plotted, hubs are always plotted"
"0","    ggp <- ggplot("
"0","      temp_df,"
"0","      mapping = aes("
"0","        x = pos_degree,"
"0","        y = dgr,"
"0","        label = str_trunc(genus, 12, side = ""center"")"
"0","      )"
"0","    ) +"
"0","      geom_smooth(method = ""lm"", linetype = 3, se = F, color = I(""black""), show.legend = F) +"
"0","      geom_point(mapping = aes(color = phylum,"
"0","                               size = relAbundance,"
"0","                               alpha = between)) +"
"0","      geom_text_repel(show.legend = F, max.overlaps = 20, alpha = I(0.5)) +"
"0","      geom_abline(slope = 1, intercept = 0, linetype = 1) +"
"0","      geom_hline(yintercept = ave_degree, linetype = 3, show.legend = F) +"
"0","      geom_vline(xintercept = ave_pos_degree, linetype = 3, show.legend = F) +"
"0","      scale_alpha_continuous(range = c(0.4, 1)) +"
"0","      scale_size_continuous(range = c(1,6)) +"
"0","      labs("
"0","        x = ""positive degree"","
"0","        y = ""degree"","
"0","        size = ""relative abundance"","
"0","        alpha = ""betweenness"","
"0","        title = gtitle"
"0","      ) +"
"0","      theme_bw() +"
"0","      theme(plot.title = element_text(hjust = 0.5))"
"0","    "
"0","    print(ggp)"
"0","    node_degree_plot_list[[j]] <- ggp"
"0","    names(node_degree_plot_list[[j]]) <- gtitle"
"0","  }"
"0","  file_name <- paste(file.path(output_folder,out_filename_pref), ""_"", mymethods[i], ""_nodeplots.Rdata"",sep="""")"
"0","  save(node_degree_plot_list, file = file_name)"
"0","  "
"0","  # calculate frequency for hubs (meaningful only if you have many taxa and the percentile for hub detection is low, say 0.75-0.90)"
"0","  n_datasets <- dplyr::n_distinct(FMBN_node_df$dataset)"
"0","  FMBN_node_df_hubs <- FMBN_node_df %>%"
"0","    dplyr::filter(is_hub == T) %>%"
"0","    group_by(tlabel, phylum, class) %>%"
"0","    summarise(hub_freq = n()/n_datasets) %>%"
"0","    arrange(-hub_freq)"
"0","  cat(""method"", mymethods[i], ""hub frequency"", ""\n"")"
"0","  head(FMBN_node_df_hubs, 20)"
"0","  # save elements in the list"
"0","node_analysis_list[[i]] <- list("
"0","  node_df = FMBN_node_df,"
"0","  plot_list = node_degree_plot_list,"
"0","  node_df_hubs = FMBN_node_df_hubs"
"0",")"
"0","names(node_analysis_list)[i]<- mymethods[i]"
"0","  "
"0","}"
"1","method"
"1"," "
"1","spieceasi"
"1"," "
"1","hub frequency"
"1"," "
"1","
"
"1","method"
"1"," "
"1","sparcc"
"1"," "
"1","hub frequency"
"1"," "
"1","
"
