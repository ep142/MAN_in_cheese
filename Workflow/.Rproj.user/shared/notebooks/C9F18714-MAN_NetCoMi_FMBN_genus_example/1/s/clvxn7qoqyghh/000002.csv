"0","# same, by method and assotype, only for FMBN"
"0","# only meaningful for high number of studies"
"0","edge_freq_bymethod <- edge_list_df %>% "
"0","  dplyr::filter(str_detect(dataset, ""FMBN"")) %>%"
"0","  group_by(method, asso_type) %>% "
"0","  count(edge_name) %>%"
"0","  arrange(method, asso_type, -n)"
"0",""
"0","# The following section evaluates taxonomic assortativity (i.e. evaluates if "
"0","# copresence associations are more frequent among members of the same "
"0","# family, order or class). The odds ratio of copresence relationships within"
"0","# the same family is calculated using epiR::epi.2by2()"
"0",""
"0","# first, add taxonomy to the "
"0","unique_tax <- node_stats_df %>% "
"0","  dplyr::select(label, domain:species) %>%"
"0","  distinct()"
"0",""
"0","edge_list_df_wtaxa <- edge_list_df"
"0","edge_list_df_wtaxa <- left_join(edge_list_df_wtaxa, "
"0","                                dplyr::select(unique_tax, label, class, order, family), "
"0","                                by = c(""from_name"" = ""label"")) %>%"
"0","  dplyr::rename(from_class = class, from_order = order, from_family = family)"
"0","edge_list_df_wtaxa <- left_join(edge_list_df_wtaxa, "
"0","                                dplyr::select(unique_tax, label, class, order, family), "
"0","                                by = c(""to_name"" = ""label"")) %>%"
"0","  dplyr::rename(to_class = class, to_order = order, to_family = family)"
"0","# check if same family or same class"
"0","edge_list_df_wtaxa <- edge_list_df_wtaxa %>%"
"0","  mutate(same_class = if_else(from_class == to_class, T, F),"
"0","         same_order = if_else(from_order == to_order, T, F),"
"0","         same_family = if_else(from_family == to_family, T, F)"
"0","         )"
"0",""
"0","# use a loop to calculate odds ratios and probabilities"
"0","# get the number of studies"
"0",""
"0","edge_list_df_wtaxa <- edge_list_df_wtaxa %>% "
"0","  separate(dataset, into = c(""study"", ""col2"", ""col3""), remove = F) %>%"
"0","  select(-col2, -col3) %>%"
"0","  mutate(study = as.factor(study),"
"0","         sf = factor(same_family, levels = c(""TRUE"", ""FALSE"")),"
"0","         so = factor(same_order, levels = c(""TRUE"", ""FALSE"")),"
"0","         sc = factor(same_class, levels = c(""TRUE"", ""FALSE""))"
"0","  )"
"0",""
"0","assort_results_list <- vector(mode = ""list"", length = nlevels(edge_list_df_wtaxa$study))"
"0","taxo_level_selection <- ""family"""
"0","for(i in seq_along(levels(edge_list_df_wtaxa$study))){"
"0","  input_df_study <- edge_list_df_wtaxa %>% dplyr::filter(study == levels(study)[i]) %>%"
"0","    mutate(method = as.factor(method))"
"0","  inner_result_list <- vector(mode = ""list"", length = nlevels(input_df_study$method))"
"0","  for(j in seq_along(levels(input_df_study$method))){"
"0","    input_df_method <- input_df_study %>% "
"0","      mutate(method = as.factor(method)) %>%"
"0","      dplyr::filter(method == levels(method)[j])"
"0","    inner_result_list[[j]]<-try(odds_ratio(input_df_method, taxo_level = taxo_level_selection))"
"0","    names(inner_result_list)[j]<- levels(input_df_method$method)[j]"
"0","  }"
"0","  assort_results_list[[i]] <- inner_result_list"
"0","  names(assort_results_list)[i] <- levels(edge_list_df_wtaxa$study)[i]"
"0","}"
"2","NaNs produced"
"2","NaNs produced"
"2","Error in if (any(x2)) upp[x2] <- rep(1, sum(x2)) : 
  missing value where TRUE/FALSE needed
"
"2","NaNs produced"
"2","Error in uniroot(function(or) { : 
  f() values at end points not of opposite sign
"
"2","NaNs produced"
"2","NaNs produced"
"2","Error in if (sum(A) > 0 & sum(B) > 0 & sum(C) > 0 & sum(D) > 0) { : 
  missing value where TRUE/FALSE needed
"
"2","Error in if (any(x2)) upp[x2] <- rep(1, sum(x2)) : 
  missing value where TRUE/FALSE needed
"
"2","NaNs produced"
"2","NaNs produced"
"2","NaNs produced"
"2","NaNs produced"
"2","Error in while (chi2 <= z) { : missing value where TRUE/FALSE needed
"
"2","Error in if (any(x2)) upp[x2] <- rep(1, sum(x2)) : 
  missing value where TRUE/FALSE needed
"
"2","Error in if (any(x2)) upp[x2] <- rep(1, sum(x2)) : 
  missing value where TRUE/FALSE needed
"
"2","NaNs produced"
"2","NaNs produced"
"2","NaNs produced"
"2","NaNs produced"
"2","NaNs produced"
"2","Error in uniroot(function(or) { : 
  f() values at end points not of opposite sign
"
"2","NaNs produced"
"2","NaNs produced"
"0","# clean-up the list and put together the data frames"
"0",""
"0","df_list <- vector(mode = ""list"", length = length(assort_results_list))"
"0","for(i in seq_along(assort_results_list)){"
"0","  df_list[[i]] <- df_return(assort_results_list[[i]]) "
"0","  names(df_list)[i]<-names(assort_results_list)[i]"
"0","}"
"0",""
"0","assort_results_df <- bind_rows(df_list, .id = ""study"")"
"0",""
"0","# create dummy ORest values by replacing Inf"
"0","assort_results_df <- assort_results_df %>%"
"0","  mutate(OR_est_wdummy = if_else(OR_est==Inf, 99, OR_est)) %>%"
"0","  mutate(lOR_est_wdummy = log(OR_est_wdummy),"
"0","         significant = if_else(OR_p.value <=0.05, T, F)) "
"0",""
"0","# plot, studies are pooled"
"0","ggplot(assort_results_df, mapping = aes(x = assort_test, y = lOR_est_wdummy, colour = significant)) +"
"0","  facet_wrap(~method) +"
"0","  geom_jitter(width = 0.2) +"
"0","  labs(y = ""odds ratio"")"
