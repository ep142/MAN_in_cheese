"0",""
"0","if(keep_time) tic(""List with tidygraph objects created"")"
"0",""
"0","# creating a tidygraph object for each net"
"0","tidygraph_list <- vector(""list"", length = length(MAN_inf_results))"
"0",""
"0","for(i in seq_along(MAN_inf_results)){"
"0","  if(verbose_output) cat(""Converting in tidygraphs for"", names(MAN_inf_results)[i],""\n"")"
"0","  # the warning, if any, is not very informative, should consider passing names of datasets and methods"
"0","  tidygraph_list[[i]] <- MAN_inf_results[[i]] %>% map(microNet_to_tidygraph, fail_w_err = F, use_asso_matrix = T)"
"0","}"
"1","Converting in tidygraphs for"
"1"," "
"1","ST106_FMBN_ps"
"1"," "
"1","
"
"2","Joining, by = c(""from"", ""to"")
"
"2","the network has 0 edges
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"1","Converting in tidygraphs for"
"1"," "
"1","ST110_FMBN_ps"
"1"," "
"1","
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"1","Converting in tidygraphs for"
"1"," "
"1","ST115_FMBN_ps"
"1"," "
"1","
"
"2","Joining, by = c(""from"", ""to"")
"
"2","the network has 0 edges
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"1","Converting in tidygraphs for"
"1"," "
"1","ST131_FMBN_ps"
"1"," "
"1","
"
"2","Joining, by = c(""from"", ""to"")
"
"2","the network has 0 edges
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"1","Converting in tidygraphs for"
"1"," "
"1","ST136_FMBN_ps"
"1"," "
"1","
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"2","Joining, by = c(""from"", ""to"")
"
"0","names(tidygraph_list)<-names(MAN_inf_results)"
"0","if(keep_time) toc()"
"1","List with tidygraph objects created: 1.213 sec elapsed
"
"0","# optionally merge further node stats (depends on merge_n_stats) "
"0","# and calculate edge betweenness (depends on calc_e_betw)"
"0","# I am using a loop"
"0","if(keep_time) tic(""Stats added to tidygraphs, edge dataframe created"")"
"0","tidygraph_list_wstats <- vector(""list"", length = length(tidygraph_list))"
"0","# the list with the edge data frames"
"0","edge_list <- vector(""list"", length = length(tidygraph_list))"
"0",""
"0","for(i in seq_along(tidygraph_list_wstats)){"
"0","  # need to be reset"
"0","  inner_tgl <- vector(""list"", length = length(tidygraph_list[[i]]))"
"0","  inner_el <- vector(""list"", length = length(tidygraph_list[[i]]))"
"0","  dtst <- names(tidygraph_list)[i]"
"0","  for(j in seq_along(inner_tgl)){"
"0","    if(is.tbl_graph(tidygraph_list[[i]][[j]])){"
"0","    mthd = names(tidygraph_list[[i]])[j]"
"0","    nstats <- node_stats_df %>% dplyr::filter(dataset == dtst & method == mthd)"
"0","    inner_tgl[[j]] <- merge_stats(tg = tidygraph_list[[i]][[j]],"
"0","                             node_stats = nstats, "
"0","                             ebetw = calc_e_betw)"
"0","     # extract edge tibble"
"0","    inner_el[[j]] <- inner_tgl[[j]] %>% "
"0","      activate(edges) %>% "
"0","      as_tibble() %>%"
"0","      mutate(method = mthd)"
"0","    # do naming"
"0","    names(inner_tgl)[j] <- names(inner_el)[j] <- names(tidygraph_list[[i]])[j]"
"0","    } else {"
"0","      next"
"0","    }"
"0","  }"
"0","  tidygraph_list_wstats[[i]] <- inner_tgl"
"0","  edge_list[[i]] <- bind_rows(inner_el)"
"0","  edge_list[[i]] <- edge_list[[i]] %>% "
"0","    mutate(dataset = dtst) %>% dplyr::select(dataset, method, !(dataset:method))"
"0","  names(tidygraph_list_wstats)[i] <- names(edge_list)[i] <- names(tidygraph_list)[i]"
"0","}"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"2","Joining, by = ""name""
"
"0","rm(nstats)"
"0","# build and fix the edge df"
"0","edge_list_df <- bind_rows(edge_list)"
"0",""
"0","edge_list_df <- edge_list_df %>% "
"0","  mutate(name_from_sorted = if_else(from_name < to_name, from_name, to_name),"
"0","         name_to_sorted = if_else(from_name < to_name, to_name, from_name)) %>%"
"0","  mutate(edge_name = str_c(name_from_sorted, name_to_sorted, sep = ""--""))"
"0","write_tsv(edge_list_df, file = paste(file.path(output_folder,out_filename_pref), ""_edgelist_df.txt"",sep=""""))"
"0","if(keep_time) toc()"
"1","Stats added to tidygraphs, edge dataframe created: 1.264 sec elapsed
"
"0","# make Venn plots"
"0",""
"0","# I am using a loop"
"0","if(do_Venn){"
"0","  if(keep_time) tic(""Venn plots created and saved"")"
"0","  Venn_list <- vector(""list"", length(tidygraph_list))"
"0","  for(i in seq_along(tidygraph_list)){"
"0","    # need to select only elements of class tbl_graph"
"0","    tblgrphs <- map_lgl(tidygraph_list[[i]], is.tbl_graph)"
"0","    names(Venn_list) <- names(tidygraph_list)"
"0","    if(length(tidygraph_list[[i]][tblgrphs])>1){"
"0","      inner_list <- map(tidygraph_list[[i]][tblgrphs], function(x) as_ids(E(x)))"
"0","      Venn_title <- names(tidygraph_list)[i]"
"0","      Venn_file <- paste(file.path(output_folder,out_filename_pref),""_"",Venn_title, ""_venns.tiff"",sep="""")"
"0","      my_fill <- (2:5)[1:length(tidygraph_list[[i]][tblgrphs])]"
"0","      Venn_list[[i]] <- venn.diagram(inner_list, "
"0","                                       fill = my_fill, "
"0","                                       alpha = 0.3, "
"0","                                       filename = Venn_file, "
"0","                                       margin = 0.05, "
"0","                                       main = Venn_title, "
"0","                                       main.cex = 1.5, "
"0","                                       main.fontface = ""bold"", "
"0","                                       main.fontfamily = ""sans"", "
"0","                                       main.pos = c(0.5, 1.05)"
"0","        )"
"0","    }"
"0","  }"
"0","  rm(inner_list, Venn_title, Venn_file)"
"0","  if(keep_time) toc()"
"0","}"
"1","Venn plots created and saved: 1.841 sec elapsed
"
"0","if(play_audio) beep(sound = 6)"
